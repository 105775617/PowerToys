<UserControl x:Class="ColorPicker.Views.ColorEditorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ColorPicker.Views"
             mc:Ignorable="d"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:behaviors="clr-namespace:ColorPicker.Behaviors"
             Background="{DynamicResource BackgroundBrush}"
             d:DesignHeight="320" d:DesignWidth="400">
    <UserControl.Resources>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListViewPointerOverBrush}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="Yellow"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListViewPressedBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="64"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="1" Height="40" Background="Transparent" VerticalAlignment="Top" IsHitTestVisible="True">
            <e:Interaction.Behaviors>
                <behaviors:DragWindowBehavior/>
            </e:Interaction.Behaviors>
            <Border
                Background="{DynamicResource DialogWindowTitleBarForegroundBrush}"
                Grid.ColumnSpan="2"
                Width="30"
                Height="3"
                CornerRadius="1.5"
                VerticalAlignment="Center"
                Margin="0,4,0,0" />
            <Button Grid.Column="2" Command="{Binding CloseWindowCommand}" HorizontalAlignment="Right" Width="35" FontFamily="Segoe MDL2 Assets" Content="&#xE894;"/>
        </Grid>
        <Grid Background="{DynamicResource DialogWindowTitleBarBackgroundBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ui:AppBarButton Command="{Binding OpenColorPickerCommand}">
                <ui:AppBarButton.Icon>
                    <ui:FontIcon
                                FontFamily="Segoe MDL2 Assets"
                                Glyph="&#xEF3C;" />
                </ui:AppBarButton.Icon>
            </ui:AppBarButton>
            <ui:ListView Margin="0,12,0,0" Grid.Row="1" Padding="0" ItemsSource="{Binding ColorsHistory}" SelectedItem="{Binding SelectedColor}" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}">
                <ui:ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="64" Height="48">
                            <Border
                                Width="24"
                                Height="24"
                                CornerRadius="4"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="{Binding Path=., Converter={StaticResource colorToBrushConverter}}">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="12" Direction="0" ShadowDepth="2"/>
                                </Border.Effect>
                            </Border>
                        </Grid>

                    </DataTemplate>
                </ui:ListView.ItemTemplate>
                <!--<ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>-->
            </ui:ListView>
        </Grid>

        <TextBlock Grid.Row="1" Grid.Column="1" Margin="64" Text="{Binding SelectedColor, Converter={StaticResource colorToStringConverter}}" FontSize="20">
            <e:Interaction.Behaviors>
                <behaviors:CopyToClipboardBehavior CopiedIndicationBorder="{Binding ElementName=CopiedBorderIndicator}" />
            </e:Interaction.Behaviors>
        </TextBlock>

        <Border x:Name="CopiedBorderIndicator" Visibility="Collapsed" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="20" Background="Gray">
            <TextBlock Text="Copied!"/>
        </Border>
    </Grid>
</UserControl>
